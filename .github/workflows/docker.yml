name: Build and Push Docker Image

on:
  push:
    branches: [11_cicd, main]
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract Docker tags
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: mlfalconaro/portfolio-reflex
        tags: |
          type=semver,pattern={{version}}

    - name: Build and push Reflex app image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ startsWith(github.ref, 'refs/tags/v') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Show results
      run: |
        echo "âœ… Build completed!"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Pushed: ${{ startsWith(github.ref, 'refs/tags/v') }}"

  test-compose:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build images with Docker Compose (force rebuild)
      run: |
        TAG=latest docker compose build --no-cache

    - name: Run services with Docker Compose
      run: |
        TAG=latest docker compose up -d
        echo "Waiting for MongoDB to be ready inside app container..."
        docker compose exec app sh -c '
          until nc -z mongo 27017; do
            echo "MongoDB not ready yet..."
            sleep 2
          done
          echo "MongoDB is ready!"
        '

    - name: Run pytest inside app container
      run: |
        docker compose exec -T app pytest -vv --maxfail=1 --disable-warnings

    - name: Tear down
      if: always()
      run: docker compose down
